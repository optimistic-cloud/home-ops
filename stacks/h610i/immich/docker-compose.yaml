services:
  machine-learning:
    cap_drop:
      - ALL
    environment:
      IMMICH_LOG_LEVEL: log
      IMMICH_PORT: "32002"
      MACHINE_LEARNING_CACHE_FOLDER: /mlcache
      NODE_ENV: production
      NVIDIA_VISIBLE_DEVICES: void
      TRANSFORMERS_CACHE: /mlcache
      TZ: Europe/Berlin
      UMASK: "002"
      UMASK_SET: "002"
    healthcheck:
      disable: false
    image: ghcr.io/immich-app/immich-machine-learning:v2.2.1@sha256:590a76bba3d88ccf78b03cde0c0fb8788f7d76ae6caf90ad33a34b5b4cc35f11
    platform: linux/amd64
    privileged: false
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    stdin_open: false
    tty: false
    volumes:
      - read_only: false
        target: /mlcache
        type: volume
        volume:
          nocopy: false

  database:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:bcf63357191b76a916ae5eb93464d65c07511da41e3bf7a8416db519b40b1c23
    restart: unless-stopped
    shm_size: 128mb
    environment:
      POSTGRES_INITDB_ARGS: '--data-checksums'
      NVIDIA_VISIBLE_DEVICES: void
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: "5432"
      POSTGRES_USER: ${POSTGRES_USER}
      TZ: Europe/Berlin
      UMASK: "002"
      UMASK_SET: "002"
      DB_STORAGE_TYPE: 'HDD'
    volumes:
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/postgres-data/data
        target: /var/lib/postgresql/data
        type: bind

  pgvecto:
    image: tensorchord/pgvecto-rs:pg15-v0.2.0@sha256:104a26ad4d0446c54a46d3a694c6193ef018c5ad4f9d9faf7765ab09cb9ffe06
    cap_drop:
      - ALL
    environment:
      NVIDIA_VISIBLE_DEVICES: void
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: "5433"
      POSTGRES_USER: ${POSTGRES_USER}
      TZ: Europe/Berlin
      UMASK: "002"
      UMASK_SET: "002"
      DB_STORAGE_TYPE: 'HDD'
    healthcheck:
      interval: 10s
      retries: 30
      start_period: 10s
      test: pg_isready -h 127.0.0.1 -p 5432 -U $$POSTGRES_USER -d $$POSTGRES_DB
      timeout: 5s
    platform: linux/amd64
    privileged: false
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    stdin_open: false
    tty: false
    user: "3000:3000"
    volumes:
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/postgres-data/postgres-data
        target: /var/lib/postgresql/data
        type: bind

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  server:
    container_name: immich-server
    cap_drop:
      - ALL
    depends_on:
      machine-learning:
        condition: service_healthy
      pgvecto:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_DATABASE_NAME: ${POSTGRES_DB}
      DB_HOSTNAME: database
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: "5432"
      DB_USERNAME: ${POSTGRES_USER}
      IMMICH_LOG_LEVEL: log
      IMMICH_MACHINE_LEARNING_ENABLED: "true"
      IMMICH_MACHINE_LEARNING_URL: http://machine-learning:32002
      IMMICH_PORT: "30041"
      NODE_ENV: production
      NVIDIA_VISIBLE_DEVICES: void
      REDIS_DBINDEX: "0"
      REDIS_HOSTNAME: redis
      #REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: "6379"
      TZ: Europe/Berlin
      UMASK: "002"
      UMASK_SET: "002"
    healthcheck:
      disable: false
    image: ghcr.io/immich-app/immich-server:v2.2.1@sha256:2c951a4063b55ec2de197fdf6a85e32b05872d3a18a18eaf851b827ff2622814
    #platform: linux/amd64
    #ports:
    #  - mode: ingress
    #    protocol: tcp
    #    published: 30041
    #    target: 30041
    #privileged: false
    restart: unless-stopped
    #security_opt:
    #  - no-new-privileges=true
    #stdin_open: false
    #tty: false
    user: "3000:3000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/data/immich-data/backups
        target: /data/backups
        type: bind
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/data/immich-data/encoded-video
        target: /data/encoded-video
        type: bind
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/data/immich-data/library
        target: /data/library
        type: bind
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/data/immich-data/profile
        target: /data/profile
        type: bind
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/data/immich-data/thumbs
        target: /data/thumbs
        type: bind
      - bind:
          create_host_path: false
          propagation: rprivate
        read_only: false
        source: /mnt/tank/apps/immich/data/immich-data/upload
        target: /data/upload
        type: bind

networks:
  default:
    name: immich

volumes:
  redis-data: {}
  beszel-socket:
    name: beszel-socket
  beszel-agent-data:
    name: beszel-agent-data