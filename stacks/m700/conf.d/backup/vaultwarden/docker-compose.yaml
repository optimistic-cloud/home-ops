x-healthcheck: &default-healthcheck
  interval: 180s
  timeout: 10s
  retries: 5
  start_period: 60s

services:
  traefik:
    image: traefik:v3.5.2
    container_name: traefik-restore
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      <<: *default-healthcheck
    environment:
      TZ: Europe/Berlin

      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-restore/config/acme.json:/acme.json
      - ./traefik-restore/config/traefik.yml:/etc/traefik/traefik.yml:ro
    labels:
      - "traefik.enable=true"

  vaultwarden:
    image: vaultwarden/server:1.34.3
    container_name: vaultwarden-restore
    restart: unless-stopped
    read_only: true
    environment:
      TZ: Europe/Berlin
      
      DOMAIN: https://vaultwarden-restore.${DOMAIN}
      ADMIN_TOKEN: ${VAULTWARDEN_ADMIN_TOKEN}
      SIGNUPS_ALLOWED: false
      INVITATIONS_ALLOWED: false

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/alive"]
      <<: *default-healthcheck
    volumes:
      - ./vaultwarden-restore/backup/data:/data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden-restore.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=https"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
